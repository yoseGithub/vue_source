{"version":3,"file":"vue.js","sources":["../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":[" // 不能直接改写数组原方法，也就是不能直接 Array.prototype.push = fn 直接改写，这样数组原功能也会被覆盖掉\r\n// 需要通过 Object.create(Array.prototype) 来创建一个对象，通过原型链来获取到数组的方法\r\nlet oldArrayMethods = Array.prototype\r\n\r\nexport let arrayMethods = Object.create(Array.prototype)\r\n// 7个会改变原数组的方法，而其他诸如concat slice等都不会改变原数组\r\nlet methods = ['push', 'pop', 'shift', 'unshift', 'splice', 'reverse', 'sort']\r\n\r\n// AOP切片编程\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function (...args) {\r\n        // 有可能用户新增的数据是对象，也需要进行拦截，比如 vm._data.arr.push({a: 1})\r\n        let inserted\r\n        let ob = this.__ob__\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break;\r\n            case 'splice': // splice(0, 1, xxx)\r\n                inserted = args.slice(2)\r\n            default: break;\r\n        }\r\n\r\n        // 如果有值则需要使用 observeArray 方法，通过 Observer 中对每一项进行监控时，如果为数组则会在该数组属性上挂上数组遍历方法\r\n        if (inserted) {\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        // 调用数组原有方法执行\r\n        const result = oldArrayMethods[method].call(this, ...args)\r\n        return result\r\n    }\r\n})\r\n","import { arrayMethods } from './array.js'\r\n\r\nclass Observer {\r\n    constructor (value) { // value 最初为 data 传入的每一项数据\r\n        // 这一句是为了在 arrayMethods中可以使用 observeArray 方法，如果是数组，则会在数组上挂载一个 Observer 实例\r\n        // 在数组arrayMethods拦截中可以使用 observeArray 来对数组进行观测\r\n        Object.defineProperty(value, '__ob__', {\r\n            value: this,\r\n            enumerable: false, // 不能被枚举，否则会导致死循环\r\n            configurable: false // 不能删除此属性\r\n        })\r\n\r\n        // value可能是对象 也可能是数组，需要分开处理\r\n        if (Array.isArray(value)) {\r\n            // value.__ob__ = this\r\n\r\n            // 数组不用defineProperty来进行代理 性能不好\r\n            // 如果是数组，则将数组原型链指向被劫持后的数组，这样如果是改变数组的方法则会先被劫持，否则通过原型链使用数组方法\r\n            Object.setPrototypeOf(value, arrayMethods)\r\n            this.observeArray(value) // 原有数组中的对象\r\n            // value.__proto__ = arrayMethods // 同上，但这种写法非标准。个人文章：https://www.jianshu.com/p/28a0164b0d63\r\n        } else {\r\n            this.walk(value)\r\n        }\r\n    }\r\n    // 监控数组中是否为对象，如果是则进行劫持\r\n    observeArray (value) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            observe(value[i])\r\n        }\r\n    }\r\n    walk (data) {\r\n        // 将对象中所有的key 重新用 defineProperty定义成响应式的\r\n        Object.keys(data).forEach((key) => {\r\n            defineReactive(data, key, data[key])\r\n        })\r\n    }\r\n}\r\n\r\nexport function defineReactive (data, key, value) { // vue2中数据嵌套不要过深，过深浪费性能\r\n    // value可能也是一个对象\r\n    observe(value) // 对结果递归拦截\r\n\r\n    Object.defineProperty(data, key, {\r\n        get () {\r\n            return value\r\n        },\r\n        set (newValue) {\r\n            // 值没变化，无需重新设置\r\n            if (newValue === value) return\r\n            observe(newValue) // 如果用户设置的是一个对象，就继续将用户设置的对象变成响应式的\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe (data) {\r\n    if (typeof data !== 'object' || data == null) return\r\n\r\n    if (data.__ob__) return // 如果有__ob__，证明已经被观测了\r\n\r\n    // 通过类来实现对数据的观测，类可以方便拓展，会产生实例\r\n    return new Observer(data)\r\n}","import { observe } from './observer/index'\r\n\r\n// 初始化状态\r\nexport function initState (vm) {\r\n    // 将所有数据都定义在 vm 属性上，并且后续更改需要触发视图更新\r\n    const opts = vm.$options // 获取用户属性\r\n\r\n    // 加入options中有同名，查看属性的顺序：props -> methods -> data -> computed -> watch\r\n\r\n    // 如果有data属性，初始化数据\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n\r\n    if (opts.methods) {\r\n        // 数据的初始化\r\n    }\r\n}\r\n\r\n// 数据代理\r\nfunction Proxy (vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get () {\r\n            return vm[source][key]\r\n        },\r\n        set (newValue) {\r\n            vm[source][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\n// 初始化数据\r\nfunction initData (vm) {\r\n    // 数据劫持 Object.defineProperty\r\n    let data = vm.$options.data\r\n\r\n    // data 有可能是个对象，也可能是个函数，如果是个函数，获取函数返回值作为对象\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data // 这里最开头的data暂时没看出来有什么用\r\n\r\n    // 通过 vm._data 获取劫持后的数据，用户就可以拿到 _data 了\r\n    // 将 _data 中的数据全部放到 vm 上\r\n    for (let key in data) {\r\n        Proxy(vm, '_data', key)\r\n    }\r\n\r\n    // 观测数据\r\n    observe(data)\r\n}","import { initState } from './state'\r\n\r\n// 通过原型混合的方式，往vue的原型添方法\r\nexport default function initMixin (Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        const vm = this\r\n        // 实例上有个属性 $options ，表示的是用户传入的所有属性\r\n        vm.$options = options\r\n\r\n        // 初始化状态\r\n        initState(vm)\r\n    }\r\n}","import initMixin from './init'\r\n\r\nfunction Vue (options) {\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","inserted","ob","__ob__","args","slice","observeArray","result","call","Observer","value","defineProperty","enumerable","configurable","isArray","setPrototypeOf","walk","i","length","observe","data","keys","key","defineReactive","get","set","newValue","initState","vm","opts","$options","initData","Proxy","source","_data","initMixin","Vue","_init","options"],"mappings":"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"}